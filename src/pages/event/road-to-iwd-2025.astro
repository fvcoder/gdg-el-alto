---
import User from "../../components/infoUser.astro";
import Layout from "../../layouts/Layout.astro";
import { button } from "../../styles/button";
import { text } from "../../styles/text";
import { cn } from "../../util/cn";
import { getCollection } from "astro:content";
import { CountToDown } from "./../../components/react/countToDown";

const event = (await getCollection('event', (e) => e.id === "road-to-iwd-2025"))[0]; 
const schedule = await getCollection('schedule', (s) => s.data.eventId.id === "road-to-iwd-2025");
const stages = await getCollection("stage");
const people = await getCollection("people");

const calendar = stages.map((s) => {
  return {
    name: s.data.name,
    schedule: schedule.filter((f) => f.data.stageId.id === s.id).map((s2) => {
      const personImage = people.find((p) => p.id === s2.data.speakers[0].id)?.data.image
      return {
        id: s2.id,
        name: s2.data.name,
        startTime: s2.data.startDate,
        endTime: s2.data.endDate,
        personImage,
      }
    })
  }
}).filter((x) => x.schedule.length)


const timeStart = new Date(event.data.startDate)
---
<Layout title={event.data.name} description={event.data.description} image={event.data.image}>
  <section class="max-w-5xl mx-auto px-6 py-[4.625rem] text-center">

    <span class={cn(text({ style: "displayMedium" }), "max-w-[677px] mx-auto")}>üë©‚Äçüíªüé´üòÅ</span>
    <h1 class={cn(text({ style: "displayMedium" }), "max-w-[677px] mx-auto")}>Road To IWD 2025</h1>
    <div class="p-4 w-fit mx-auto border-[var(--md-sys-color-primary)] rounded-3xl flex items-center gap-4">
      <div id="countdown" class="flex items-center gap-4" data-date={event.data.startDate} data-class-number={text({ style: "titleLarge" })} data-class-text={text({ style: "bodySmall" })}>
        <div class="spinner" id="loading"></div>
      </div>
    </div>
    <script>
      const countdownElement = document.getElementById("countdown");
      function startCountdown(targetDate: string) {
        
        function updateCountdown() {
            if (!countdownElement) {
              return;
            }
              const now = new Date().getTime();
              const distance = new Date(targetDate).getTime() - now;
              
              const days = Math.floor(distance / (1000 * 60 * 60 * 24));
              const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
              const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
              const seconds = Math.floor((distance % (1000 * 60)) / 1000);
              
              if (distance < 0) {
                  countdownElement.innerHTML = "¬°Ya inicio el evento!";
                  return;
              }
              
              countdownElement.innerHTML = "";
              
              if (days > 0) countdownElement.innerHTML += `<div style="display: flex;flex-direction: column;justify-content: center;"><span class="${countdownElement.getAttribute("data-class-number")}">${days}</span><span class="${countdownElement.getAttribute("data-class-text")}">D√≠as</span></div>`;
              if (hours > 0) countdownElement.innerHTML += `<div style="display: flex;flex-direction: column;justify-content: center;"><span class="${countdownElement.getAttribute("data-class-number")}">${hours}</span><span class="${countdownElement.getAttribute("data-class-text")}">Horas</span></div>`;
              if (minutes > 0) countdownElement.innerHTML += `<div style="display: flex;flex-direction: column;justify-content: center;"><span class="${countdownElement.getAttribute("data-class-number")}">${minutes}</span><span class="${countdownElement.getAttribute("data-class-text")}">Minutos</span></div>`;
              countdownElement.innerHTML += `<div style="display: flex;flex-direction: column;justify-content: center;"><span class="${countdownElement.getAttribute("data-class-number")}">${seconds}</span><span class="${countdownElement.getAttribute("data-class-text")}">Segundos</span></div>`;
          }
          
          updateCountdown();
          setInterval(updateCountdown, 1000);
      }
      
      if (countdownElement) {
        startCountdown(countdownElement.getAttribute("data-date") as string);
      }
    </script>
    <div class="flex items-center justify-center mt-4 gap-2">
      <a href="https://gdg.community.dev/events/details/google-gdg-el-alto-presents-international-womens-day-2025-el-alto-redefine-possible/" target="_blank" class={cn(button({ style: "filled" }))}>Reserva un lugar</a>
    </div>
  </section>
  <section class="max-w-5xl mx-auto px-6 text-center space-y-4">
    <p class={cn(text({ style: "bodyMedium" }))}>Con el apoyo de</p>
    <div class="max-w-[750px] mx-auto flex flex-col md:flex-row flex-wrap justify-center">
      {event.data.sponsors.map((s) => (
        <div title={s.name} class="p-2 w-1/3">
          <img src={s.image} alt={s.name} class="max-h-40 object-contain w-[75%] md:w-auto mx-auto" />
        </div>
      ))}
    </div>
  </section>
  <section class="max-w-5xl mx-auto px-6 my-6">
    <h2 class={cn(text({ style: "displaySmall" }), "mb-2")} id="agenda">Agenda</h2>
    <p class={cn(text({ style: "bodyMedium" }))}>Ven, disfruta, conoce en comunidad</p>
    <div class="flex flex-wrap justify-center gap-4 mt-[2.6875rem]">
      {calendar.map((c) => (
        <article class="w-full md:max-w-sm border rounded-[20px] border-[var(--md-sys-color-primary)]">
          <header class="bg-[var(--md-sys-color-primary)] rounded-t-[18px] h-12 flex items-center justify-center">
            <h3 class="hidden">Escenario: {c.name}</h3>
            <p class={cn(text({ style: "titleMedium" }), "text-[var(--md-sys-color-on-primary)]")}>{c.name}</p>
          </header>
          <main>
            <ul>
              {c.schedule.map((s) => (
                <li>
                  <a href={`/schedule/${s.id}`} class="block py-2 px-4">
                    <User title={s.name} description={new Date(s.startTime).toLocaleString("es-BO", { hour: "numeric", minute: "numeric", hour12: true, timeZone: "America/New_York" })} image={s.personImage ?? ""} />
                  </a>
                </li>  
              ))}
            </ul>
          </main>
        </article>
      ))}
    </div>
  </section>
  <section class="max-w-5xl mx-auto px-6 mt-8">
    <h2 class={cn(text({ style: "displaySmall" }), "mb-8")} id="faq">Preguntas Frecuentes</h2>
    <ul class="grid grid-cols-1 md:grid-cols-2 gap-4">
      {event.data.faq.map((f) => (
        <li>
          <h4 class={cn(text({ style: "titleMedium" }), "mb-2")}>{f.question}</h4>
          <p class={cn(text({ style: "bodyMedium" }))}>{f.answer}</p>
        </li>
      ))}
    </ul>
  </section>
</Layout>